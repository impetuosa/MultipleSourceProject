<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="3" failures="1" name="MultipleSourcesProject.MultipleSourcesProject.HibernateDaoTest" time="1.542" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib"/>
    <property name="java.vm.version" value="25.102-b14"/>
    <property name="user.country.format" value="FR"/>
    <property name="gopherProxySet" value="false"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/sbragagn/eclipse-workspace/MultipleSourcesProject"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/sbragagn/eclipse-workspace/MultipleSourcesProject"/>
    <property name="java.runtime.version" value="1.8.0_102-b14"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/99/4bg8bvkd65s_bth3tycyybmh0000gp/T/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/Users/sbragagn/eclipse-workspace/.metadata/.plugins/org.eclipse.m2e.launching/launches/m2conf52906841314432164.tmp"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/sbragagn/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.14.3"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/sbragagn"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="sbragagn"/>
    <property name="java.class.path" value="/Users/sbragagn/.p2/pool/plugins/org.eclipse.m2e.maven.runtime_1.10.0.20181127-2120/jars/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_102"/>
    <property name="java.ext.dirs" value="/Users/sbragagn/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/Users/sbragagn/eclipse-workspace/MultipleSourcesProject/EMBEDDED"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="MultipleSourcesProject.MultipleSourcesProject.HibernateDaoTest" name="testDatabaseGenteration" time="0.954"/>
  <testcase classname="MultipleSourcesProject.MultipleSourcesProject.HibernateDaoTest" name="testFetchingExpectedData" time="0.304">
    <failure message="expected:&lt;2&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: expected:&lt;2&gt; but was:&lt;1&gt;
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at junit.framework.Assert.assertEquals(Assert.java:71)
	at MultipleSourcesProject.MultipleSourcesProject.HibernateDaoTest.testFetchingExpectedData(HibernateDaoTest.java:54)
</failure>
    <system-out>Hibernate: select this_.id as id1_3_1_, this_.birthdate as birthdat2_3_1_, this_.gender as gender3_3_1_, this_.name as name4_3_1_, addresses2_.Person_id as Person1_3_3_, address3_.IDENTIFIANT as addresse2_4_3_, address3_.IDENTIFIANT as IDENTIFI1_0_0_, address3_.host as host1_2_0_, address3_.username as username2_2_0_, address3_.name as name1_1_0_, address3_.number as number2_1_0_, address3_.complement as compleme3_1_0_, address3_.clazz_ as clazz_0_ from Person this_ left outer join Person_Address addresses2_ on this_.id=addresses2_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address3_ on addresses2_.addresses_IDENTIFIANT=address3_.IDENTIFIANT
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
Hibernate: select person0_.id as id1_3_1_, person0_.birthdate as birthdat2_3_1_, person0_.gender as gender3_3_1_, person0_.name as name4_3_1_, addresses1_.Person_id as Person1_3_3_, address2_.IDENTIFIANT as addresse2_4_3_, address2_.IDENTIFIANT as IDENTIFI1_0_0_, address2_.host as host1_2_0_, address2_.username as username2_2_0_, address2_.name as name1_1_0_, address2_.number as number2_1_0_, address2_.complement as compleme3_1_0_, address2_.clazz_ as clazz_0_ from Person person0_ left outer join Person_Address addresses1_ on person0_.id=addresses1_.Person_id left outer join ( select IDENTIFIANT, null::varchar as host, null::varchar as username, null::varchar as name, null::int4 as number, null::varchar as complement, 0 as clazz_ from Address union all select IDENTIFIANT, host, username, null::varchar as name, null::int4 as number, null::varchar as complement, 1 as clazz_ from MailAddress union all select IDENTIFIANT, null::varchar as host, null::varchar as username, name, number, complement, 2 as clazz_ from BuildingAddress ) address2_ on addresses1_.addresses_IDENTIFIANT=address2_.IDENTIFIANT where person0_.id=?
</system-out>
    <system-err>Jun 03, 2019 5:46:16 PM org.hibernate.cfg.Configuration configure
INFO: HHH000043: Configuring from resource: /hibernate.cfg.xml
Jun 03, 2019 5:46:16 PM org.hibernate.cfg.Configuration getConfigurationInputStream
INFO: HHH000040: Configuration resource: /hibernate.cfg.xml
Jun 03, 2019 5:46:16 PM org.hibernate.cfg.Configuration addResource
INFO: HHH000221: Reading mappings from resource: muad/dib/model/Address.hbm.xml
Jun 03, 2019 5:46:16 PM org.hibernate.cfg.Configuration doConfigure
INFO: HHH000041: Configured SessionFactory: null
Jun 03, 2019 5:46:16 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)
Jun 03, 2019 5:46:16 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 20
Jun 03, 2019 5:46:16 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000006: Autocommit mode: true
Jun 03, 2019 5:46:16 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost/sbragagn]
Jun 03, 2019 5:46:16 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000046: Connection properties: {user=sbragagn, password=****, autocommit=true}
Jun 03, 2019 5:46:17 PM org.hibernate.dialect.Dialect &lt;init&gt;
INFO: HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL82Dialect
Jun 03, 2019 5:46:17 PM org.hibernate.engine.jdbc.internal.LobCreatorBuilder useContextualLobCreation
INFO: HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
Jun 03, 2019 5:46:17 PM org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService
INFO: HHH000399: Using default transaction strategy (direct JDBC transactions)
Jun 03, 2019 5:46:17 PM org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory &lt;init&gt;
INFO: HHH000397: Using ASTQueryTranslatorFactory
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.SchemaUpdate execute
INFO: HHH000228: Running hbm2ddl schema update
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.SchemaUpdate execute
INFO: HHH000102: Fetching database metadata
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.SchemaUpdate execute
INFO: HHH000396: Updating schema
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000261: Table found: public.address
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000037: Columns: [identifiant]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000108: Foreign keys: []
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000126: Indexes: [address_pkey]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000261: Table found: public.buildingaddress
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000037: Columns: [number, identifiant, name, complement]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000108: Foreign keys: []
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000126: Indexes: [buildingaddress_pkey]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000261: Table found: public.mailaddress
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000037: Columns: [identifiant, host, username]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000108: Foreign keys: []
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000126: Indexes: [mailaddress_pkey]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000261: Table found: public.person
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000037: Columns: [birthdate, gender, name, id]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000108: Foreign keys: []
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000126: Indexes: [person_pkey]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000261: Table found: public.person_address
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000037: Columns: [addresses_identifiant, person_id]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000108: Foreign keys: [fk4b781d0a9091f9b3]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.TableMetadata &lt;init&gt;
INFO: HHH000126: Indexes: [uk_4b781d0a13a3504e]
Jun 03, 2019 5:46:17 PM org.hibernate.tool.hbm2ddl.SchemaUpdate execute
INFO: HHH000232: Schema update complete
</system-err>
  </testcase>
  <testcase classname="MultipleSourcesProject.MultipleSourcesProject.HibernateDaoTest" name="testLogAPerson" time="0.284"/>
</testsuite>